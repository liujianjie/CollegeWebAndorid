<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
<!--     开启注解 -->
    <context:annotation-config/>
<!--     spring 扫包 扫描 com.ht包下的所有类都可以使用注解 -->
    <context:component-scan base-package="com.ht">
<!--     	过滤Controller,不用spring实例化，由springmvc注解完成 让controll类使用@Controller可以成为action
			以及 service实现类用@Service注解可以@Resource可直接找到 ？ -->
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>	
	<!-- 整合持久化框架 -->		
	<!-- a.读取属性文件，获得连接信息 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	        <list>
	            <value>classpath:jdbc.properties</value>
	        </list>
	    </property>
	</bean>	
	<!-- b.配置数据源 随意id -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<!-- c.配置sqlsessionfactory 随意id -->
	<bean id="sqlSessionFactoryes"
	    class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- 注入数据源 -->
	   	<property name="dataSource" ref="dataSource"></property>
	   	<!-- mybatis主配置文件 -->
	   	<property name="configLocation"
	   	    value="classpath:config.xml"></property>
	   	<!-- 自动扫描mapper文件 -->
	   	<property name="mapperLocations" value="classpath:com/ht/mapper/*mapper.xml"></property>
	</bean>
	
	<!-- mapper代理 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ht.daoi"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryes"></property>    
	</bean>
	
	<!-- d.配置事务管理器 -->
	<bean id="txManager"
	    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	    <!-- 配置事务规则 -->
	    <tx:attributes>
	        <!-- 只读事务只做用查询 -->
<!-- 	        <tx:method name="selectAll*" propagation="REQUIRED" -->
<!-- 	            read-only="true"/> -->
			<!-- 其它处理  比如这个add* 代表的是切入点下的类中的add开头的方法，REQUIRED的意思好像是 事务传播机制-->
			<tx:method name="add*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	<!-- 使用AOP -->
	<aop:config>
	    <!-- 定义切入点 -->
	    <aop:pointcut expression="execution(* com.ht.service.*.*(..))" 
	        id="pointcut"/>
	    
	    <!-- 织入增强 -->
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
</beans>